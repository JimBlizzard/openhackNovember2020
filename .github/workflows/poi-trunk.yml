name: POI CICD

env:
  WEBDIR: web
  REGISTRYNAME: openhackvn13pzx8acr 
  REPOSITORYNAME: devopsoh/api-poi
  APPID: ${{ secrets.APP_ID }}
  SERVICEPRINPWD: ${{ secrets.SERVICE_PRIN_PWD }}
  TENANTID: ${{ secrets.TENANT_ID }}
  WEBAPPNAME: openhackvn13pzx8poi

on:
  push:
    branches: [ trunk ]
    paths:
      - apis/poi/**
      - .github/workflows/poi-trunk.yml
  pull_request:
    branches: [ trunk ]
    paths:
      - apis/poi/**
      - .github/workflows/poi-trunk.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Add Code Coverage Tools
      working-directory: apis/poi/tests/UnitTests
      run: dotnet add package coverlet.msbuild

    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests  /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov 

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with: 
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
        base-path: apis/poi
        flag-name: Unit

    - name: Create issue using REST API if the job failed 
      if: ${{ failure() }}
      run: | 
        curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/issues \
            --header "Accept: application/vnd.github.v3+json" \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --data '{
              "title": "Automated issue for commit : ${{ github.sha }}",
              "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_. The build_and_test job failed."
              }' 
        
      shell: bash

  docker_build_push_to_ACR:
    if: github.ref == 'refs/heads/trunk' 
    runs-on: ubuntu-latest
    needs: build_and_test
    steps: 
    - uses: actions/checkout@v2
    
    - name: Build and push POI container image to ACR
      working-directory: apis/poi/web/
      run: |
        echo "Building API-POI image..."
        # cd $WEBDIR
        az login --service-principal --username $APPID --password $SERVICEPRINPWD --tenant $TENANTID
        az acr build --image devopsoh/api-poi:$GITHUB_RUN_NUMBER --registry $REGISTRYNAME --file Dockerfile .
        echo "The docker file with tag " $GITHUB_RUN_NUMBER " has been uploaded to ACR."

      shell: bash 

    - name: Create issue using REST API if the job failed 
      if: ${{ failure() }}
      run: | 
        curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/issues \
            --header "Accept: application/vnd.github.v3+json" \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --data '{
              "title": "Automated issue for commit : ${{ github.sha }}",
              "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_. The docker_build_push_to_ACR job failed."
              }' 
        
      shell: bash

  deploy_staging: 
    if: github.ref == 'refs/heads/trunk' 
    runs-on: ubuntu-latest
    needs: docker_build_push_to_ACR
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure WebApp
      uses: azure/webapps-deploy@v2 
      with:
        app-name: ${{ env.WEBAPPNAME }}
        slot-name: staging
        images: ${{ env.REGISTRYNAME }}/${{ env.REPOSITORYNAME }}:${{GITHUB.RUN_NUMBER}}


    # steps:
    # - name: Deploy POI container to web app
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: 'openhackvn13pzx8poi'
    #     publish-profile: ${{ secrets.PUBLISH_PROFILE_PRODUCTION }}
    #     images: $REGISTRYNAME/devopsho/api-poi:$GITHUB_RUN_NUMBER

    - name: Create issue using REST API if the job failed 
      if: ${{ failure() }}
      run: | 
        curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/issues \
            --header "Accept: application/vnd.github.v3+json" \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --data '{
              "title": "Automated issue for commit : ${{ github.sha }}",
              "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_. The deploy_staging job failed."
              }' 
        
      shell: bash

